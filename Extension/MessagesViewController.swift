//
//  MessagesViewController.swift
//  Extension
//
//  Created by Alex Nagy on 16/12/2018.
//  Copyright Â© 2018 Alex Nagy. All rights reserved.
//

import UIKit
import Messages
import TinyConstraints

class MessagesViewController: MSMessagesAppViewController {
    
    let nameLabel: UILabel = {
        let label = UILabel()
        label.text = "Name: N/A"
        return label
    }()
    
    lazy var getFromKeychainButton: UIButton = {
        var button = UIButton(type: .system)
        button.setTitle("Get", for: .normal)
        button.setTitleColor(.white, for: .normal)
        button.titleLabel?.font = UIFont.boldSystemFont(ofSize: 16)
        button.backgroundColor = #colorLiteral(red: 0.8392156863, green: 0.1882352941, blue: 0.1921568627, alpha: 1)
        button.layer.cornerRadius = 8
        button.layer.masksToBounds = true
        button.addTarget(self, action: #selector(getFromKeychainButtonTapped), for: .touchUpInside)
        return button
    }()
    
    @objc fileprivate func getFromKeychainButtonTapped() {
        
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        setupViews()
    }
    
    fileprivate func setupViews() {
        view.backgroundColor = #colorLiteral(red: 0.8745098039, green: 0.9019607843, blue: 0.9137254902, alpha: 1)
        
        view.addSubview(nameLabel)
        view.addSubview(getFromKeychainButton)
        
        nameLabel.edgesToSuperview(excluding: .bottom, insets: .top(48) + .left(12) + .right(12), usingSafeArea: true)
        nameLabel.width(50)
        
        getFromKeychainButton.topToBottom(of: nameLabel, offset: 12)
        getFromKeychainButton.leftToSuperview(offset: 12, usingSafeArea: true)
        getFromKeychainButton.rightToSuperview(offset: -12, usingSafeArea: true)
        getFromKeychainButton.height(50)
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }

}
